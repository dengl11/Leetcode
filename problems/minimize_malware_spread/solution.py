from collections import Counter
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        initial.sort()
        uf = {i:i for i in range(n)}
        def find(i):
            if uf[i] != i:
                uf[i] = find(uf[i])
            return uf[i]
        
        def union(i, j):
            uf[find(j)] = find(i)
        
        visited = set()
        def dfs(i):
            if i in visited: return
            visited.add(i)
            for j in range(n):
                if graph[i][j] and j not in visited:
                    union(i, j)
                    dfs(j)
        for x in initial:
            dfs(x)
        
        
        c = Counter(find(x) for x in initial)            
        best = set(k for k,v in c.items() if v == 1)
        if not best: return initial[0]
        cc = Counter(find(x) for x in range(n))            
        ans = []
        for x in initial:
            ans.append((-cc[find(x)], x))
        return min(ans)[1]
        